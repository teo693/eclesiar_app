# Eclesiar App Optimized Dockerfile
# Copyright (c) 2025 Teo693
# Licensed under the MIT License - see LICENSE file for details.

# Multi-stage build for smaller final image
FROM python:3.11-slim as builder

# Set environment variables for build
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Install build dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    gcc \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements and install Python packages
COPY requirements/docker.txt /tmp/requirements.txt
RUN pip install --no-cache-dir --upgrade pip \
    && pip install --no-cache-dir --user -r /tmp/requirements.txt

# Final stage - minimal runtime image
FROM python:3.11-slim

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    DEBIAN_FRONTEND=noninteractive \
    PATH="/root/.local/bin:$PATH"

# Set work directory
WORKDIR /app

# Install only essential runtime dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    cron \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean \
    && apt-get autoremove -y

# Copy Python packages from builder stage
COPY --from=builder /root/.local /root/.local

# Create symlink for python -> python3
RUN ln -sf /usr/local/bin/python3 /usr/local/bin/python

# Copy application code
COPY . /app/

# Create necessary directories
RUN mkdir -p /app/logs /app/reports /app/data /app/cred

# Set proper permissions
RUN chmod +x /app/main.py

# Create cron job for Google Sheets economic reports every 3 hours  
RUN echo "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin" > /etc/cron.d/eclesiar-cron && \
    echo "0 */3 * * * root cd /app && /usr/local/bin/python3 main.py google-sheets-report --economic-only >> /app/logs/cron.log 2>&1" >> /etc/cron.d/eclesiar-cron && \
    chmod 0644 /etc/cron.d/eclesiar-cron && \
    crontab /etc/cron.d/eclesiar-cron

# Create startup script
RUN echo '#!/bin/bash\n\
echo "Starting Eclesiar App with scheduled reports..."\n\
echo "Google Sheets economic reports will be generated every 3 hours"\n\
echo "First report will be generated immediately..."\n\
echo "Starting periodic command scheduler: cron."\n\
\n\
# Ensure log file exists\n\
touch /app/logs/cron.log\n\
\n\
# Start cron daemon\n\
service cron start\n\
\n\
# Show cron configuration for debugging\n\
echo "Cron configuration:"\n\
crontab -l\n\
\n\
# Initialize data and generate initial report\n\
cd /app && /usr/local/bin/python3 src/cli/docker_init_data.py\n\
\n\
# Keep container running and show logs\n\
tail -f /app/logs/cron.log' > /app/start.sh

RUN chmod +x /app/start.sh

# Expose port (if needed for future web interface)
EXPOSE 8000

# Set the startup script as entrypoint
ENTRYPOINT ["/app/start.sh"]
